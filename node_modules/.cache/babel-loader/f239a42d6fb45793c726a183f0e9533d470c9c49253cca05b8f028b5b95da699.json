{"ast":null,"code":"import React,{useState}from'react';import'../styles/main.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Game=()=>{// State variables\nconst[userChoice,setUserChoice]=useState(null);const[computerChoice,setComputerChoice]=useState(null);const[result,setResult]=useState('');// Function to handle user choice\nconst handleUserChoice=choice=>{setUserChoice(choice);generateComputerChoice();determineWinner();};// Function to generate computer choice\nconst generateComputerChoice=()=>{const choices=['rock','paper','scissors'];const randomIndex=Math.floor(Math.random()*choices.length);setComputerChoice(choices[randomIndex]);};// Function to determine the winner\nconst determineWinner=()=>{if(userChoice===computerChoice){setResult(\"It's a tie!\");}else if(userChoice==='rock'&&computerChoice==='scissors'||userChoice==='paper'&&computerChoice==='rock'||userChoice==='scissors'&&computerChoice==='paper'){setResult('You win!');}else{setResult('Computer wins!');}};// Render the game interface\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Rock, Paper, Scissors\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"choices\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice('rock'),children:\"Rock\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice('paper'),children:\"Paper\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUserChoice('scissors'),children:\"Scissors\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Your choice: \",userChoice]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Computer's choice: \",computerChoice]}),/*#__PURE__*/_jsx(\"p\",{children:result})]})]});};export default Game;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Game","userChoice","setUserChoice","computerChoice","setComputerChoice","result","setResult","handleUserChoice","choice","generateComputerChoice","determineWinner","choices","randomIndex","Math","floor","random","length","className","children","onClick"],"sources":["C:/Users/Ghad-/OneDrive/Desktop/rock-paper-scissors/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/main.scss';\r\n\r\nconst Game = () => {\r\n  // State variables\r\n  const [userChoice, setUserChoice] = useState(null);\r\n  const [computerChoice, setComputerChoice] = useState(null);\r\n  const [result, setResult] = useState('');\r\n\r\n  // Function to handle user choice\r\n  const handleUserChoice = (choice) => {\r\n    setUserChoice(choice);\r\n    generateComputerChoice();\r\n    determineWinner();\r\n  };\r\n\r\n  // Function to generate computer choice\r\n  const generateComputerChoice = () => {\r\n    const choices = ['rock', 'paper', 'scissors'];\r\n    const randomIndex = Math.floor(Math.random() * choices.length);\r\n    setComputerChoice(choices[randomIndex]);\r\n  };\r\n\r\n  // Function to determine the winner\r\n  const determineWinner = () => {\r\n    if (userChoice === computerChoice) {\r\n      setResult(\"It's a tie!\");\r\n    } else if (\r\n      (userChoice === 'rock' && computerChoice === 'scissors') ||\r\n      (userChoice === 'paper' && computerChoice === 'rock') ||\r\n      (userChoice === 'scissors' && computerChoice === 'paper')\r\n    ) {\r\n      setResult('You win!');\r\n    } else {\r\n      setResult('Computer wins!');\r\n    }\r\n  };\r\n\r\n  // Render the game interface\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Rock, Paper, Scissors</h1>\r\n      <div className=\"choices\">\r\n        <button onClick={() => handleUserChoice('rock')}>Rock</button>\r\n        <button onClick={() => handleUserChoice('paper')}>Paper</button>\r\n        <button onClick={() => handleUserChoice('scissors')}>Scissors</button>\r\n      </div>\r\n      <div className=\"result\">\r\n        <p>Your choice: {userChoice}</p>\r\n        <p>Computer's choice: {computerChoice}</p>\r\n        <p>{result}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACQ,cAAc,CAAEC,iBAAiB,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACU,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAExC;AACA,KAAM,CAAAY,gBAAgB,CAAIC,MAAM,EAAK,CACnCN,aAAa,CAACM,MAAM,CAAC,CACrBC,sBAAsB,CAAC,CAAC,CACxBC,eAAe,CAAC,CAAC,CACnB,CAAC,CAED;AACA,KAAM,CAAAD,sBAAsB,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAE,OAAO,CAAG,CAAC,MAAM,CAAE,OAAO,CAAE,UAAU,CAAC,CAC7C,KAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGJ,OAAO,CAACK,MAAM,CAAC,CAC9DZ,iBAAiB,CAACO,OAAO,CAACC,WAAW,CAAC,CAAC,CACzC,CAAC,CAED;AACA,KAAM,CAAAF,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAIT,UAAU,GAAKE,cAAc,CAAE,CACjCG,SAAS,CAAC,aAAa,CAAC,CAC1B,CAAC,IAAM,IACJL,UAAU,GAAK,MAAM,EAAIE,cAAc,GAAK,UAAU,EACtDF,UAAU,GAAK,OAAO,EAAIE,cAAc,GAAK,MAAO,EACpDF,UAAU,GAAK,UAAU,EAAIE,cAAc,GAAK,OAAQ,CACzD,CACAG,SAAS,CAAC,UAAU,CAAC,CACvB,CAAC,IAAM,CACLA,SAAS,CAAC,gBAAgB,CAAC,CAC7B,CACF,CAAC,CAED;AACA,mBACEP,KAAA,QAAKkB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrB,IAAA,OAAAqB,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BnB,KAAA,QAAKkB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBrB,IAAA,WAAQsB,OAAO,CAAEA,CAAA,GAAMZ,gBAAgB,CAAC,MAAM,CAAE,CAAAW,QAAA,CAAC,MAAI,CAAQ,CAAC,cAC9DrB,IAAA,WAAQsB,OAAO,CAAEA,CAAA,GAAMZ,gBAAgB,CAAC,OAAO,CAAE,CAAAW,QAAA,CAAC,OAAK,CAAQ,CAAC,cAChErB,IAAA,WAAQsB,OAAO,CAAEA,CAAA,GAAMZ,gBAAgB,CAAC,UAAU,CAAE,CAAAW,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnE,CAAC,cACNnB,KAAA,QAAKkB,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBnB,KAAA,MAAAmB,QAAA,EAAG,eAAa,CAACjB,UAAU,EAAI,CAAC,cAChCF,KAAA,MAAAmB,QAAA,EAAG,qBAAmB,CAACf,cAAc,EAAI,CAAC,cAC1CN,IAAA,MAAAqB,QAAA,CAAIb,MAAM,CAAI,CAAC,EACZ,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}