{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghad-\\\\OneDrive\\\\Desktop\\\\rock-paper-scissors\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/main.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  // State variables\n  const [userChoice, setUserChoice] = useState(null);\n  const [computerChoice, setComputerChoice] = useState(null);\n  const [result, setResult] = useState('');\n\n  // Function to handle user choice\n  const handleUserChoice = choice => {\n    setUserChoice(choice);\n    generateComputerChoice();\n    determineWinner();\n  };\n\n  // Function to generate computer choice\n  const generateComputerChoice = () => {\n    const choices = ['rock', 'paper', 'scissors'];\n    const randomIndex = Math.floor(Math.random() * choices.length);\n    setComputerChoice(choices[randomIndex]);\n  };\n\n  // Function to determine the winner\n  const determineWinner = () => {\n    if (userChoice === computerChoice) {\n      setResult(\"It's a tie!\");\n    } else if (userChoice === 'rock' && computerChoice === 'scissors' || userChoice === 'paper' && computerChoice === 'rock' || userChoice === 'scissors' && computerChoice === 'paper') {\n      setResult('You win!');\n    } else {\n      setResult('Computer wins!');\n    }\n  };\n\n  // Render the game interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rock, Paper, Scissors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choices\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserChoice('rock'),\n        children: \"Rock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserChoice('paper'),\n        children: \"Paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserChoice('scissors'),\n        children: \"Scissors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your choice: \", userChoice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Computer's choice: \", computerChoice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"abe2XSH+ethmitDfl5+SGp9GhvM=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","_s","userChoice","setUserChoice","computerChoice","setComputerChoice","result","setResult","handleUserChoice","choice","generateComputerChoice","determineWinner","choices","randomIndex","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ghad-/OneDrive/Desktop/rock-paper-scissors/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/main.scss';\r\n\r\nconst Game = () => {\r\n  // State variables\r\n  const [userChoice, setUserChoice] = useState(null);\r\n  const [computerChoice, setComputerChoice] = useState(null);\r\n  const [result, setResult] = useState('');\r\n\r\n  // Function to handle user choice\r\n  const handleUserChoice = (choice) => {\r\n    setUserChoice(choice);\r\n    generateComputerChoice();\r\n    determineWinner();\r\n  };\r\n\r\n  // Function to generate computer choice\r\n  const generateComputerChoice = () => {\r\n    const choices = ['rock', 'paper', 'scissors'];\r\n    const randomIndex = Math.floor(Math.random() * choices.length);\r\n    setComputerChoice(choices[randomIndex]);\r\n  };\r\n\r\n  // Function to determine the winner\r\n  const determineWinner = () => {\r\n    if (userChoice === computerChoice) {\r\n      setResult(\"It's a tie!\");\r\n    } else if (\r\n      (userChoice === 'rock' && computerChoice === 'scissors') ||\r\n      (userChoice === 'paper' && computerChoice === 'rock') ||\r\n      (userChoice === 'scissors' && computerChoice === 'paper')\r\n    ) {\r\n      setResult('You win!');\r\n    } else {\r\n      setResult('Computer wins!');\r\n    }\r\n  };\r\n\r\n  // Render the game interface\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Rock, Paper, Scissors</h1>\r\n      <div className=\"choices\">\r\n        <button onClick={() => handleUserChoice('rock')}>Rock</button>\r\n        <button onClick={() => handleUserChoice('paper')}>Paper</button>\r\n        <button onClick={() => handleUserChoice('scissors')}>Scissors</button>\r\n      </div>\r\n      <div className=\"result\">\r\n        <p>Your choice: {userChoice}</p>\r\n        <p>Computer's choice: {computerChoice}</p>\r\n        <p>{result}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}